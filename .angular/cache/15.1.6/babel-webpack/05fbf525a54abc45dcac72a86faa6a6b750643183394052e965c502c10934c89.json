{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction RegisterComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"first name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"first name must be at least 3 char\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"first name must be less than 10 char\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, RegisterComponent_div_9_p_1_Template, 2, 0, \"p\", 14);\n    i0.ɵɵtemplate(2, RegisterComponent_div_9_p_2_Template, 2, 0, \"p\", 14);\n    i0.ɵɵtemplate(3, RegisterComponent_div_9_p_3_Template, 2, 0, \"p\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"name\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"name\"].hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.registerForm.controls[\"name\"].hasError(\"maxlength\"));\n  }\n}\nfunction RegisterComponent_div_14_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_14_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_p_1_Template, 2, 0, \"p\", 14);\n    i0.ɵɵtemplate(2, RegisterComponent_div_14_p_2_Template, 2, 0, \"p\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.controls[\"email\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.registerForm.controls[\"email\"].hasError(\"email\"));\n  }\n}\nfunction RegisterComponent_div_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_p_1_Template, 2, 0, \"p\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.registerForm.controls[\"password\"].hasError(\"required\"));\n  }\n}\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.error = \"\";\n    this.registerForm = new FormGroup({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(10), Validators.minLength(3)]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    }, {\n      validators: this.CustomValidators.passwordMatch\n    });\n  }\n  ngOnInit() {}\n  submitRegisterForm(registerForm) {\n    console.log(registerForm);\n    if (registerForm.valid) {\n      // this.router.navigate(['/login'])\n      this.authService.register(this.registerForm.value).subscribe(response => {\n        console.log(response);\n        //     if(response.message==\"success\"){\n        // //go to login\n        // this.router.navigate(['/login'])\n        //     }else{\n        // this.error=response.errors.email.message\n        //  }\n      });\n    }\n  }\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 23,\n  vars: 6,\n  consts: [[1, \"w-50\", \"mx-auto\", \"p-5\", \"shadow\", \"mt-5\"], [1, \"text-center\", \"my-4\"], [\"class\", \"alert alert-danger m-2\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"alert alert-danger mt-2\", 4, \"ngIf\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"password\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"mb-3\", \"text-center\"], [1, \"btn\", \"btn-light\", \"px-5\", 3, \"disabled\"], [1, \"alert\", \"alert-danger\", \"m-2\"], [1, \"alert\", \"alert-danger\", \"mt-2\"], [4, \"ngIf\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Register Now\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, RegisterComponent_div_3_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submitRegisterForm(ctx.registerForm);\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 4, 3, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n      i0.ɵɵtext(17, \"Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 10)(21, \"button\", 11);\n      i0.ɵɵtext(22, \"Register \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_2_0.errors) != null && ((tmp_2_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_4_0.errors) != null && ((tmp_4_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","RegisterComponent","constructor","authService","router","name","required","maxLength","minLength","email","password","validators","CustomValidators","passwordMatch","ngOnInit","submitRegisterForm","registerForm","console","log","valid","register","value","subscribe","response","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/register/register.component.ts","/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { CustomValidators } from '../custom-validators';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent  implements OnInit{\n\nerror:string=\"\"\n\nregisterForm:FormGroup=new FormGroup({\nname:new FormControl(null,[Validators.required,Validators.maxLength(10),Validators.minLength(3)]),\n  \nemail:new FormControl(null,[Validators.required,Validators.email]),\n\npassword:new FormControl(null,[Validators.required]),\n},\n,\n{validators:this.CustomValidators.passwordMatch}\n\n)\n\nconstructor(private authService:AuthService , private router:Router){}\nngOnInit(): void {\n\n}\n\nsubmitRegisterForm(registerForm:FormGroup){\n   console.log(registerForm)\n\nif(registerForm.valid){\n  // this.router.navigate(['/login'])\n  this.authService.register(this.registerForm.value).subscribe((response)=>{\nconsole.log(response)\n//     if(response.message==\"success\"){\n// //go to login\n\n// this.router.navigate(['/login'])\n//     }else{\n// this.error=response.errors.email.message\n  //  }\n\n }\n )\n\n}\n}\n\n\n\n\n\n\n\n\n\n}\n","\n\n\n\n\n\n\n\n<div class=\"   w-50  mx-auto  p-5 shadow mt-5\">\n\n  <h2 class=\"text-center my-4\">Register Now</h2>\n  <div class=\"alert alert-danger m-2\" *ngIf=\"error\">\n    <p>{{error}}</p>\n  </div>\n  <form    [formGroup]=\"registerForm\"   (ngSubmit)=\"submitRegisterForm(registerForm)\">\n  <!-- <h1>{{registerForm.get('first_name')?.errors|json}}</h1> -->\n\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\"> Name </label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"name\">\n  <div class=\"alert alert-danger mt-2\"   *ngIf=\"registerForm.get('name')?.errors!= null && registerForm.get('name')?.touched\">\n  <p *ngIf=\"registerForm.controls['name'].hasError('required')\">first name is required</p>\n  <p *ngIf=\"registerForm.controls['name'].hasError('minlength')\">first name must be at least 3 char</p>\n  <p *ngIf=\"registerForm.controls['name'].hasError('maxlength')\">first name must be less than 10 char</p>\n  </div>\n\n    </div>\n\n\n\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"email\">\n      <div class=\"alert alert-danger mt-2\" *ngIf=\"registerForm.get('email')?.errors!= null && registerForm.get('email')?.touched\">\n         <p *ngIf=\"registerForm.controls['email'].hasError('required')\">email is required</p>\n         <p *ngIf=\"registerForm.controls['email'].hasError('email')\">invalid email</p>\n      </div>\n      </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Password </label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"password\">\n      <div class=\"alert alert-danger mt-2\" *ngIf=\"registerForm.get('password')?.errors!= null && registerForm.get('password')?.touched\">\n        <p *ngIf=\"registerForm.controls['password'].hasError('required')\">password is required</p>\n        <!-- <p *ngIf=\"registerForm.controls['password'].hasError('pattern')\">invalid password</p> -->\n     </div>\n    </div>\n\n  <div class=\"mb-3  text-center\">\n    <button  class=\"btn btn-light px-5\"  [disabled]=\"registerForm.invalid\">Register </button>\n  </div>\n\n  </form>\n\n\n  </div>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}