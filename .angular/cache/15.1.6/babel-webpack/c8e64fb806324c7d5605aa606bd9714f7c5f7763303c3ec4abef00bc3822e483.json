{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(authService, router, pr) {\n    this.authService = authService;\n    this.router = router;\n    this.error = \"\";\n    this.registerForm = new FormGroup({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(10), Validators.minLength(3)]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    }, {\n      validators: this.CustomValidators.passwordMatch\n    });\n  }\n  ngOnInit() {}\n  submitRegisterForm(registerForm) {\n    console.log(registerForm);\n    if (registerForm.valid) {\n      // this.router.navigate(['/login'])\n      this.authService.register(this.registerForm.value).subscribe(response => {\n        console.log(response);\n        //     if(response.message==\"success\"){\n        // //go to login\n        // this.router.navigate(['/login'])\n        //     }else{\n        // this.error=response.errors.email.message\n        //  }\n      });\n    }\n  }\n};\n\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAgB9BC,YAAoBC,WAAuB,EAAWC,MAAa,EAAEC,EAAE;IAAnD,gBAAW,GAAXF,WAAW;IAAuB,WAAM,GAANC,MAAM;IAd5D,UAAK,GAAQ,EAAE;IAEf,iBAAY,GAAW,IAAIL,SAAS,CAAC;MACrCO,IAAI,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACO,QAAQ,EAACP,UAAU,CAACQ,SAAS,CAAC,EAAE,CAAC,EAACR,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAEjGC,KAAK,EAAC,IAAIZ,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACO,QAAQ,EAACP,UAAU,CAACU,KAAK,CAAC,CAAC;MAElEC,QAAQ,EAAC,IAAIb,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC;KAClD,EAED;MAACK,UAAU,EAAC,IAAI,CAACC,gBAAgB,CAACC;IAAa,CAAC,CAE/C;EAEwE;EACzEC,QAAQ,IAER;EAEAC,kBAAkB,CAACC,YAAsB;IACtCC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IAE5B,IAAGA,YAAY,CAACG,KAAK,EAAC;MACpB;MACA,IAAI,CAACjB,WAAW,CAACkB,QAAQ,CAAC,IAAI,CAACJ,YAAY,CAACK,KAAK,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;QAC3EN,OAAO,CAACC,GAAG,CAACK,QAAQ,CAAC;QACrB;QACA;QAEA;QACA;QACA;QACE;MAED,CAAC,CACA;;EAGF;CAUC;;AAlDYvB,iBAAiB,eAL7BJ,SAAS,CAAC;EACT4B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW1B,iBAAiB,CAkD7B;SAlDYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","authService","router","pr","name","required","maxLength","minLength","email","password","validators","CustomValidators","passwordMatch","ngOnInit","submitRegisterForm","registerForm","console","log","valid","register","value","subscribe","response","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/register/register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { CustomValidators } from '../custom-validators';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent  implements OnInit{\n\nerror:string=\"\"\n\nregisterForm:FormGroup=new FormGroup({\nname:new FormControl(null,[Validators.required,Validators.maxLength(10),Validators.minLength(3)]),\n  \nemail:new FormControl(null,[Validators.required,Validators.email]),\n\npassword:new FormControl(null,[Validators.required]),\n},\n,\n{validators:this.CustomValidators.passwordMatch}\n\n)\n\nconstructor(private authService:AuthService , private router:Router ,pr){}\nngOnInit(): void {\n\n}\n\nsubmitRegisterForm(registerForm:FormGroup){\n   console.log(registerForm)\n\nif(registerForm.valid){\n  // this.router.navigate(['/login'])\n  this.authService.register(this.registerForm.value).subscribe((response)=>{\nconsole.log(response)\n//     if(response.message==\"success\"){\n// //go to login\n\n// this.router.navigate(['/login'])\n//     }else{\n// this.error=response.errors.email.message\n  //  }\n\n }\n )\n\n}\n}\n\n\n\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}