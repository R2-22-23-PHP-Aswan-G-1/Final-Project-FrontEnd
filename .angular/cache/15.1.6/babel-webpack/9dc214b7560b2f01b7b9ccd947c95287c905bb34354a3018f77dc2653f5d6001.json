{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(router, authService, RoleService) {\n    this.router = router;\n    this.authService = authService;\n    this.RoleService = RoleService;\n    this.error = '';\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  submitRegisterForm(loginForm) {\n    if (loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        console.log(response.data);\n        if (response.data != null) {\n          localStorage.setItem('userToken', response.data.token);\n          this.authService.token();\n          this.router.navigate(['/home']);\n        } else {\n          this.error = response.message;\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC;AAEA,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAQ3BC,YAAoBC,MAAa,EAAUC,WAAuB,EAAUC,WAAY;IAApE,WAAM,GAANF,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAAsB,gBAAW,GAAXC,WAAW;IAPrF,UAAK,GAAS,EAAE;IAClB,cAAS,GAAW,IAAIN,SAAS,CAAC;MAChCO,KAAK,EAAC,IAAIR,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACO,QAAQ,EAACP,UAAU,CAACM,KAAK,CAAC,CAAC;MAClEE,QAAQ,EAAC,IAAIV,WAAW,CAAC,IAAI,EAAC,CAACE,UAAU,CAACO,QAAQ,CAAC;KAEpD,CAAC;EAEwF;EAG1FE,kBAAkB,CAACC,SAAmB;IACpC,IAAGA,SAAS,CAACC,KAAK,EAAC;MACnB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACF,SAAS,CAACG,KAAK,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;QACjEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;QAC1B,IAAGH,QAAQ,CAACG,IAAI,IAAI,IAAI,EAAC;UACxBC,YAAY,CAACC,OAAO,CAAC,WAAW,EAACL,QAAQ,CAACG,IAAI,CAACG,KAAK,CAAC;UACrD,IAAI,CAACjB,WAAW,CAACiB,KAAK,EAAE;UACxB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAC/B,MAAI;UAET,IAAI,CAACC,KAAK,GAACR,QAAQ,CAACS,OAAO;;MAI1B,CAAC,CACA;;EAGF;CAEC;AA/BYvB,cAAc,eAL1BJ,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW1B,cAAc,CA+B1B;SA/BYA,cAAc","names":["Component","FormControl","FormGroup","Validators","LoginComponent","constructor","router","authService","RoleService","email","required","password","submitRegisterForm","loginForm","valid","login","value","subscribe","response","console","log","data","localStorage","setItem","token","navigate","error","message","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n// import { DeviceDetectorService } from 'ngx-device-detector';\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { RoleService } from 'src/app/services/role.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  error :string=''\nloginForm:FormGroup=new FormGroup({\n  email:new FormControl(null,[Validators.required,Validators.email]),\n  password:new FormControl(null,[Validators.required]),\n\n})\n\nconstructor(private router:Router ,private authService:AuthService ,private RoleService:){}\n\n\nsubmitRegisterForm(loginForm:FormGroup){\n  if(loginForm.valid){\n  this.authService.login(this.loginForm.value).subscribe((response)=>{\n    console.log(response.data);\n    if(response.data != null){\n     localStorage.setItem('userToken',response.data.token);\n     this.authService.token();\n     this.router.navigate(['/home'])\n    }else{\n\nthis.error=response.message\n\n    }\n\n }\n )\n\n }\n}\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}