{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\n// import { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nuser;\nlet LoginComponent = class LoginComponent {\n  constructor(router, authService, u) {\n    this.router = router;\n    this.authService = authService;\n    this.u = u;\n    this.error = '';\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  submitRegisterForm(loginForm) {\n    if (loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        console.log(response);\n        if (response.message == \"success\") {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('user', response.user);\n          this.authService.token();\n          this.router.navigate(['/home']);\n        } else {\n          this.error = response.message;\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC;AAEA,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAInEC,IAAI;AAMG,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAW3BC,YAAoBC,MAAa,EAAUC,WAAuB,EAAUC,CAAC;IAAzD,WAAM,GAANF,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAAsB,MAAC,GAADC,CAAC;IAV3E,UAAK,GAAW,EAAE;IAElB,cAAS,GAAc,IAAIP,SAAS,CAAC;MACnCQ,KAAK,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;KAGtD,CAAC;EASJ;EAGGE,kBAAkB,CAACC,SAAmB;IACvC,IAAGA,SAAS,CAACC,KAAK,EAAC;MACnB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACF,SAAS,CAACG,KAAK,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;QACjEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAGA,QAAQ,CAACG,OAAO,IAAI,SAAS,EAAC;UAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACL,QAAQ,CAACM,KAAK,CAAC;UAC5CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAACL,QAAQ,CAACf,IAAI,CAAC;UACxC,IAAI,CAACI,WAAW,CAACiB,KAAK,EAAE;UACxB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAC/B,MAAI;UAET,IAAI,CAACC,KAAK,GAACR,QAAQ,CAACG,OAAO;;MAIzB,CAAC,CAAC;;EAEF;CAGD;AAxCYjB,cAAc,eAL1BL,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWzB,cAAc,CAwC1B;SAxCYA,cAAc","names":["Component","FormControl","FormGroup","Validators","user","LoginComponent","constructor","router","authService","u","email","required","password","submitRegisterForm","loginForm","valid","login","value","subscribe","response","console","log","message","localStorage","setItem","token","navigate","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n// import { DeviceDetectorService } from 'ngx-device-detector';\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nuser\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  error: string = ''\n\n  loginForm: FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required]),\n  \n\n  })\n\n\nconstructor(private router:Router ,private authService:AuthService ,private u){\n\n\n \n\n\n}\n\n\n   submitRegisterForm(loginForm:FormGroup){\n  if(loginForm.valid){\n  this.authService.login(this.loginForm.value).subscribe((response)=>{\n    console.log(response);\n    if(response.message == \"success\"){\n   localStorage.setItem('token',response.token)\n   localStorage.setItem('user',response.user)\n     this.authService.token();\n     this.router.navigate(['/home'])\n    }else{\n\nthis.error=response.message\n\n\n    }\n  })\n  }\n  }\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}