{"ast":null,"code":"// import { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"src/app/services/user-data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction LoginComponent_div_9_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"invalid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_9_p_1_Template, 2, 0, \"p\", 13);\n    i0.ɵɵtemplate(2, LoginComponent_div_9_p_2_Template, 2, 0, \"p\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"email\"].hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loginForm.controls[\"email\"].hasError(\"email\"));\n  }\n}\nfunction LoginComponent_div_14_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_p_1_Template, 2, 0, \"p\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.loginForm.controls[\"password\"].hasError(\"required\"));\n  }\n}\nexport class LoginComponent {\n  constructor(router, authService, userDataService) {\n    this.router = router;\n    this.authService = authService;\n    this.userDataService = userDataService;\n    this.error = '';\n    this.loginForm = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  submitRegisterForm(loginForm) {\n    if (loginForm.valid) {\n      this.authService.login(this.loginForm.value).subscribe(response => {\n        console.log(response);\n        if (response.message == \"success\") {\n          localStorage.setItem('token', response.token);\n          localStorage.setItem('user', JSON.stringify());\n          this.authService.token();\n          this.userDataService.token();\n          this.userDataService.userData();\n          this.router.navigate(['/home']);\n        } else {\n          this.error = response.message;\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.UserDataService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[1, \"w-50\", \"mx-auto\", \"p-5\", \"shadow\", \"mt-5\"], [1, \"text-center\", \"my-4\"], [\"class\", \"alert alert-danger m-2\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"alert alert-danger mt-2\", 4, \"ngIf\"], [\"type\", \"password\", \"id\", \"exampleFormControlInput1\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"mb-3\", \"text-center\"], [1, \"btn\", \"px-5\"], [1, \"alert\", \"alert-danger\", \"m-2\"], [1, \"alert\", \"alert-danger\", \"mt-2\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Login Now\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, LoginComponent_div_3_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementStart(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.submitRegisterForm(ctx.loginForm);\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9)(16, \"button\", 10);\n      i0.ɵɵtext(17, \"Login \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors) != null && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.errors) != null && ((tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA;AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;ICQjEC,+BAAkD;IAC7CA,YAAS;IAAAA,iBAAI;;;;IAAbA,eAAS;IAATA,kCAAS;;;;;IAQPA,yBAA4D;IAAAA,iCAAiB;IAAAA,iBAAI;;;;;IACjFA,yBAAyD;IAAAA,6BAAa;IAAAA,iBAAI;;;;;IAF7EA,+BAAsH;IACnHA,kEAAiF;IACjFA,kEAA0E;IAC7EA,iBAAM;;;;IAFCA,eAAsD;IAAtDA,8EAAsD;IACtDA,eAAmD;IAAnDA,2EAAmD;;;;;IAOxDA,yBAA+D;IAAAA,oCAAoB;IAAAA,iBAAI;;;;;IADzFA,+BAA4H;IAC1HA,mEAAuF;IAE1FA,iBAAM;;;;IAFCA,eAAyD;IAAzDA,iFAAyD;;;ADdrE,OAAM,MAAOC,cAAc;EAW3BC,YAAoBC,MAAa,EAAUC,WAAuB,EAAUC,eAA+B;IAAvF,WAAM,GAANF,MAAM;IAAiB,gBAAW,GAAXC,WAAW;IAAsB,oBAAe,GAAfC,eAAe;IAVzF,UAAK,GAAW,EAAE;IAElB,cAAS,GAAc,IAAIP,SAAS,CAAC;MACnCQ,KAAK,EAAE,IAAIT,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACrEE,QAAQ,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACQ,QAAQ,CAAC;KAGtD,CAAC;EASJ;EAGGE,kBAAkB,CAACC,SAAmB;IACvC,IAAGA,SAAS,CAACC,KAAK,EAAC;MACnB,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,IAAI,CAACF,SAAS,CAACG,KAAK,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG;QACjEC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrB,IAAGA,QAAQ,CAACG,OAAO,IAAI,SAAS,EAAC;UAClCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACL,QAAQ,CAACM,KAAK,CAAC;UAC5CF,YAAY,CAACC,OAAO,CAAC,MAAM,EAACE,IAAI,CAACC,SAAS,EAAE,CAAC;UAC3C,IAAI,CAACnB,WAAW,CAACiB,KAAK,EAAE;UACzB,IAAI,CAAChB,eAAe,CAACgB,KAAK,EAAE;UAC5B,IAAI,CAAChB,eAAe,CAACmB,QAAQ,EAAE;UAC9B,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;SAC/B,MAAI;UAET,IAAI,CAACC,KAAK,GAACX,QAAQ,CAACG,OAAO;;MAIzB,CAAC,CAAC;;EAEF;;AAvCWjB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCN3B/B,8BAA6C;MAEdA,yBAAS;MAAAA,iBAAK;MAC3CA,+DAEM;MACNA,+BAA8E;MAA3CA;QAAA,OAAYgC,qCAA6B;MAAA,EAAC;MAE3EhC,8BAAkB;MACyCA,qBAAK;MAAAA,iBAAQ;MACtEA,2BAA8F;MAC9FA,+DAGM;MACNA,iBAAM;MACRA,+BAAkB;MACyCA,0BAAS;MAAAA,iBAAQ;MAC1EA,4BAAqG;MACrGA,iEAGK;MACPA,iBAAM;MAERA,+BAA+B;MACAA,uBAAM;MAAAA,iBAAS;;;;;MAvBTA,eAAW;MAAXA,gCAAW;MAGvCA,eAAuB;MAAvBA,yCAAuB;MAKUA,eAA8E;MAA9EA,oLAA8E;MAQ9EA,eAAoF;MAApFA,0LAAoF","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","router","authService","userDataService","email","required","password","submitRegisterForm","loginForm","valid","login","value","subscribe","response","console","log","message","localStorage","setItem","token","JSON","stringify","userData","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/login/login.component.ts","/home/tasneem/Desktop/test laravel/angular/Final-Project-FrontEnd/src/app/auth/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n// import { DeviceDetectorService } from 'ngx-device-detector';\n\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserDataService } from 'src/app/services/user-data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  error: string = ''\n\n  loginForm: FormGroup = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required]),\n  \n\n  })\n\n\nconstructor(private router:Router ,private authService:AuthService ,private userDataService:UserDataService){\n\n\n \n\n\n}\n\n\n   submitRegisterForm(loginForm:FormGroup){\n  if(loginForm.valid){\n  this.authService.login(this.loginForm.value).subscribe((response)=>{\n    console.log(response);\n    if(response.message == \"success\"){\n   localStorage.setItem('token',response.token)\n   localStorage.setItem('user',JSON.stringify())\n     this.authService.token();\n    this.userDataService.token();\n    this.userDataService.userData()\n     this.router.navigate(['/home'])\n    }else{\n\nthis.error=response.message\n\n\n    }\n  })\n  }\n  }\n\n\n}","\n\n\n\n\n\n\n\n<div class=\"w-50  mx-auto  p-5 shadow mt-5 \">\n\n  <h2 class=\"text-center my-4\">Login Now</h2>\n  <div class=\"alert alert-danger m-2\" *ngIf=\"error\">\n    <p>{{error}}</p>\n  </div>\n  <form    [formGroup]=\"loginForm\"   (ngSubmit)=\"submitRegisterForm(loginForm)\">\n  <!-- <h1>{{loginForm.get('first_name')?.errors|json}}</h1> -->\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"email\">\n      <div class=\"alert alert-danger mt-2\" *ngIf=\"loginForm.get('email')?.errors!= null && loginForm.get('email')?.touched\">\n         <p *ngIf=\"loginForm.controls['email'].hasError('required')\">email is required</p>\n         <p *ngIf=\"loginForm.controls['email'].hasError('email')\">invalid email</p>\n      </div>\n      </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleFormControlInput1\" class=\"form-label\">Password </label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"password\">\n      <div class=\"alert alert-danger mt-2\" *ngIf=\"loginForm.get('password')?.errors!= null && loginForm.get('password')?.touched\">\n        <p *ngIf=\"loginForm.controls['password'].hasError('required')\">password is required</p>\n        <!-- <p *ngIf=\"loginForm.controls['password'].hasError('pattern')\">invalid password</p> -->\n     </div>\n    </div>\n    <!-- <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" formControlName=\"device_name\"   value=\"oppo\"> -->\n  <div class=\"mb-3  text-center\">\n    <button  class=\"btn  px-5\"  >Login </button>\n  </div>\n\n  </form>\n\n\n  </div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}